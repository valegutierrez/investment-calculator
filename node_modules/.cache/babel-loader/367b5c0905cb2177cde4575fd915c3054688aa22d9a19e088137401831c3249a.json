{"ast":null,"code":"var _jsxFileName = \"/Users/pori/Documents/react-projects/investment-calculator/src/components/Calculator/CalculatorForm.jsx\",\n  _s = $RefreshSig$();\nimport classes from \"./CalculatorForm.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalculatorForm = props => {\n  _s();\n  const initialUserInput = {\n    enteredCurrentSavings: \"\",\n    enteredYearlyContribution: \"\",\n    enteredExpectedInterest: \"\",\n    enteredInvestmentDuration: \"\"\n  };\n  const [userInput, setUserInput] = useState(initialUserInput);\n  const currentSavingsHandler = event => {\n    setUserInput({\n      ...userInput,\n      enteredCurrentSavings: event.target.value\n    });\n  };\n  const yearlyContributionHandler = event => {\n    setUserInput({\n      ...userInput,\n      enteredYearlyContribution: event.target.value\n    });\n  };\n  const expectedInterestHandler = event => {\n    setUserInput({\n      ...userInput,\n      enteredExpectedInterest: event.target.value\n    });\n  };\n  const investmentDurationHandler = event => {\n    setUserInput({\n      ...userInput,\n      enteredInvestmentDuration: event.target.value\n    });\n  };\n  const calculateHandler = event => {\n    event.preventDefault();\n    let currentSavings = +userInput.enteredCurrentSavings;\n    const yearlyContribution = +userInput.enteredYearlyContribution;\n    const expectedInterest = +userInput.enteredExpectedInterest / 100;\n    const investmentDuration = +userInput.enteredInvestmentDuration;\n    if (isNaN(currentSavings) || isNaN(yearlyContribution) || isNaN(expectedInterest) || isNaN(investmentDuration)) {\n      return;\n    }\n    ;\n    const initialInvestment = +userInput.enteredCurrentSavings;\n    const yearlyData = []; // per-year results\n\n    for (let i = 0; i < investmentDuration; i++) {\n      const yearlyInterest = currentSavings * expectedInterest;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n    props.onSaveYearlyData(yearlyData);\n    props.onSaveInitialInvestment(initialInvestment);\n  };\n  const resetHandler = () => {\n    setUserInput(initialUserInput);\n    props.onReset();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: calculateHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"input-group\"],\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"current-savings\",\n          children: \"Current Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userInput.enteredCurrentSavings,\n          onChange: currentSavingsHandler,\n          id: \"current-savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"yearly-contribution\",\n          children: \"Yearly Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userInput.enteredYearlyContribution,\n          onChange: yearlyContributionHandler,\n          id: \"yearly-contribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"input-group\"],\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"expected-return\",\n          children: \"Expected Interest (%, per year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userInput.enteredExpectedInterest,\n          onChange: expectedInterestHandler,\n          id: \"expected-return\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"duration\",\n          children: \"Investment Duration (years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userInput.enteredInvestmentDuration,\n          onChange: investmentDurationHandler,\n          id: \"duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"reset\",\n        onClick: resetHandler,\n        className: classes.buttonAlt,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: classes.button,\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n};\n_s(CalculatorForm, \"OL/F48CuRZxN7OtvePsAMgZjytM=\");\n_c = CalculatorForm;\nexport default CalculatorForm;\nvar _c;\n$RefreshReg$(_c, \"CalculatorForm\");","map":{"version":3,"names":["classes","useState","jsxDEV","_jsxDEV","CalculatorForm","props","_s","initialUserInput","enteredCurrentSavings","enteredYearlyContribution","enteredExpectedInterest","enteredInvestmentDuration","userInput","setUserInput","currentSavingsHandler","event","target","value","yearlyContributionHandler","expectedInterestHandler","investmentDurationHandler","calculateHandler","preventDefault","currentSavings","yearlyContribution","expectedInterest","investmentDuration","isNaN","initialInvestment","yearlyData","i","yearlyInterest","push","year","savingsEndOfYear","onSaveYearlyData","onSaveInitialInvestment","resetHandler","onReset","className","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","id","actions","onClick","buttonAlt","button","_c","$RefreshReg$"],"sources":["/Users/pori/Documents/react-projects/investment-calculator/src/components/Calculator/CalculatorForm.jsx"],"sourcesContent":["import classes from \"./CalculatorForm.css\";\nimport { useState } from \"react\";\n\nconst CalculatorForm = (props) => {\n  const initialUserInput = {\n\t\tenteredCurrentSavings: \"\",\n\t\tenteredYearlyContribution: \"\",\n\t\tenteredExpectedInterest: \"\",\n    enteredInvestmentDuration: \"\"\n  }\n  const [userInput, setUserInput] = useState(initialUserInput);\n\n  const currentSavingsHandler = (event) => {\n\t\tsetUserInput({\n\t\t\t...userInput,\n\t\t\tenteredCurrentSavings: event.target.value\n\t\t})\n\t};\n\n  const yearlyContributionHandler = (event) => {\n\t\tsetUserInput({\n\t\t\t...userInput,\n\t\t\tenteredYearlyContribution: event.target.value\n\t\t})\n\t};\n\n  const expectedInterestHandler = (event) => {\n\t\tsetUserInput({\n\t\t\t...userInput,\n\t\t\tenteredExpectedInterest: event.target.value\n\t\t})\n\t};\n\n  const investmentDurationHandler = (event) => {\n\t\tsetUserInput({\n\t\t\t...userInput,\n\t\t\tenteredInvestmentDuration: event.target.value\n\t\t})\n\t};\n\n  const calculateHandler = event => {\n    event.preventDefault();\n\t\t\tlet currentSavings = +userInput.enteredCurrentSavings;\n\t\t\tconst yearlyContribution = +userInput.enteredYearlyContribution;\n\t\t\tconst expectedInterest = +userInput.enteredExpectedInterest / 100;\n      const investmentDuration = +userInput.enteredInvestmentDuration;\n\n    if (\n      isNaN(currentSavings) ||\n      isNaN(yearlyContribution) ||\n      isNaN(expectedInterest) ||\n      isNaN(investmentDuration)\n    ) { return };\n\n    const initialInvestment = +userInput.enteredCurrentSavings;\n    const yearlyData = []; // per-year results\n\n    for (let i = 0; i < investmentDuration; i++) {\n      const yearlyInterest = currentSavings * expectedInterest;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n    props.onSaveYearlyData(yearlyData);\n    props.onSaveInitialInvestment(initialInvestment);\n  };\n\n  const resetHandler = () => {\n    setUserInput(initialUserInput);\n    props.onReset();\n  }\n\n  return (\n      <form className=\"form\" onSubmit={calculateHandler}>\n      <div className={classes[\"input-group\"]}>\n        <p>\n          <label htmlFor=\"current-savings\">Current Savings ($)</label>\n          <input type=\"number\" value={userInput.enteredCurrentSavings} onChange={currentSavingsHandler} id=\"current-savings\" />\n        </p>\n        <p>\n          <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\n          <input type=\"number\" value={userInput.enteredYearlyContribution} onChange={yearlyContributionHandler} id=\"yearly-contribution\" />\n        </p>\n      </div>\n      <div className={classes[\"input-group\"]}>\n        <p>\n          <label htmlFor=\"expected-return\">\n            Expected Interest (%, per year)\n          </label>\n          <input type=\"number\" value={userInput.enteredExpectedInterest} onChange={expectedInterestHandler} id=\"expected-return\" />\n        </p>\n        <p>\n          <label htmlFor=\"duration\">Investment Duration (years)</label>\n          <input type=\"number\" value={userInput.enteredInvestmentDuration} onChange={investmentDurationHandler} id=\"duration\" />\n        </p>\n      </div>\n      <p className={classes.actions}>\n        <button type=\"reset\" onClick={resetHandler} className={classes.buttonAlt}>\n          Reset\n        </button>\n        <button type=\"submit\" className={classes.button}>\n          Calculate\n        </button>\n      </p>\n    </form>\n  )\n}\n\nexport default CalculatorForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}