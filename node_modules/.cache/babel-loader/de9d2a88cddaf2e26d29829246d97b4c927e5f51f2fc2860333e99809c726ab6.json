{"ast":null,"code":"var _jsxFileName = \"/Users/pori/Documents/react-projects/investment-calculator/src/components/Calculator/CalculatorForm.jsx\",\n  _s = $RefreshSig$();\nimport \"./CalculatorForm.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalculatorForm = props => {\n  _s();\n  const [userInput, setUserInput] = useState({\n    enteredCurrentSavings: \"\",\n    enteredYearlyContribution: \"\",\n    enteredExpectedInterest: \"\",\n    enteredInvestmentDuration: \"\"\n  });\n  const currentSavingsHandler = event => {\n    setUserInput({\n      ...userInput,\n      enteredCurrentSavings: event.target.value\n    });\n  };\n  const yearlyContributionHandler = event => {\n    setUserInput({\n      ...userInput,\n      enteredYearlyContribution: event.target.value\n    });\n  };\n  const expectedInterestHandler = event => {\n    setUserInput({\n      ...userInput,\n      enteredExpectedInterest: event.target.value\n    });\n  };\n  const investmentDurationHandler = event => {\n    setUserInput({\n      ...userInput,\n      enteredInvestmentDuration: event.target.value\n    });\n  };\n  const calculateHandler = event => {\n    event.preventDefault();\n    const investmentData = {\n      currentSavings: parseInt(userInput.enteredCurrentSavings),\n      yearlyContribution: parseInt(userInput.enteredYearlyContribution),\n      expectedInterest: userInput.enteredExpectedInterest / 100,\n      investmentDuration: parseInt(userInput.enteredInvestmentDuration)\n    };\n    console.log(investmentData);\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < investmentData.investmentDuration; i++) {\n      const yearlyInterest = investmentData.currentSavings * investmentData.expectedInterest;\n      let savingsEndofYear = investmentData.currentSavings + yearlyInterest + investmentData.yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: savingsEndofYear,\n        yearlyContribution: investmentData.yearlyContribution\n      });\n    }\n    console.log(yearlyData);\n    // do something with yearlyData ...\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: calculateHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"current-savings\",\n          children: \"Current Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userInput.enteredCurrentSavings,\n          onChange: currentSavingsHandler,\n          id: \"current-savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"yearly-contribution\",\n          children: \"Yearly Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userInput.enteredYearlyContribution,\n          onChange: yearlyContributionHandler,\n          id: \"yearly-contribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"expected-return\",\n          children: \"Expected Interest (%, per year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userInput.enteredExpectedInterest,\n          onChange: expectedInterestHandler,\n          id: \"expected-return\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"duration\",\n          children: \"Investment Duration (years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userInput.enteredInvestmentDuration,\n          onChange: investmentDurationHandler,\n          id: \"duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"reset\",\n        className: \"buttonAlt\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n};\n_s(CalculatorForm, \"kVTLdMQ2mROVJJTMpwI4ILEq/Bg=\");\n_c = CalculatorForm;\nexport default CalculatorForm;\nvar _c;\n$RefreshReg$(_c, \"CalculatorForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","CalculatorForm","props","_s","userInput","setUserInput","enteredCurrentSavings","enteredYearlyContribution","enteredExpectedInterest","enteredInvestmentDuration","currentSavingsHandler","event","target","value","yearlyContributionHandler","expectedInterestHandler","investmentDurationHandler","calculateHandler","preventDefault","investmentData","currentSavings","parseInt","yearlyContribution","expectedInterest","investmentDuration","console","log","yearlyData","i","yearlyInterest","savingsEndofYear","push","year","savingsEndOfYear","className","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","id","_c","$RefreshReg$"],"sources":["/Users/pori/Documents/react-projects/investment-calculator/src/components/Calculator/CalculatorForm.jsx"],"sourcesContent":["import \"./CalculatorForm.css\";\nimport { useState } from \"react\";\n\nconst CalculatorForm = (props) => {\n  const [userInput, setUserInput] = useState({\n\t\tenteredCurrentSavings:\"\",\n\t\tenteredYearlyContribution:\"\",\n\t\tenteredExpectedInterest: \"\",\n    enteredInvestmentDuration: \"\"\n\t});\n\n  const currentSavingsHandler = (event) => {\n\t\tsetUserInput({\n\t\t\t...userInput,\n\t\t\tenteredCurrentSavings: event.target.value\n\t\t})\n\t};\n\n  const yearlyContributionHandler = (event) => {\n\t\tsetUserInput({\n\t\t\t...userInput,\n\t\t\tenteredYearlyContribution: event.target.value\n\t\t})\n\t};\n\n  const expectedInterestHandler = (event) => {\n\t\tsetUserInput({\n\t\t\t...userInput,\n\t\t\tenteredExpectedInterest: event.target.value\n\t\t})\n\t};\n\n  const investmentDurationHandler = (event) => {\n\t\tsetUserInput({\n\t\t\t...userInput,\n\t\t\tenteredInvestmentDuration: event.target.value\n\t\t})\n\t};\n\n  const calculateHandler = event => {\n    event.preventDefault();\n    const investmentData = {\n\t\t\tcurrentSavings: parseInt(userInput.enteredCurrentSavings),\n\t\t\tyearlyContribution: parseInt(userInput.enteredYearlyContribution),\n\t\t\texpectedInterest: (userInput.enteredExpectedInterest / 100),\n      investmentDuration: parseInt(userInput.enteredInvestmentDuration)\n\t\t}\n    console.log(investmentData);\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < investmentData.investmentDuration; i++) {\n      const yearlyInterest = investmentData.currentSavings * investmentData.expectedInterest;\n      let savingsEndofYear = (investmentData.currentSavings + yearlyInterest + investmentData.yearlyContribution);\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: savingsEndofYear,\n        yearlyContribution: investmentData.yearlyContribution,\n      });\n    }\n    console.log(yearlyData);\n    // do something with yearlyData ...\n  };\n\n  return (\n      <form className=\"form\" onSubmit={calculateHandler}>\n      <div className=\"input-group\">\n        <p>\n          <label htmlFor=\"current-savings\">Current Savings ($)</label>\n          <input type=\"number\" value={userInput.enteredCurrentSavings} onChange={currentSavingsHandler} id=\"current-savings\" />\n        </p>\n        <p>\n          <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\n          <input type=\"number\" value={userInput.enteredYearlyContribution} onChange={yearlyContributionHandler} id=\"yearly-contribution\" />\n        </p>\n      </div>\n      <div className=\"input-group\">\n        <p>\n          <label htmlFor=\"expected-return\">\n            Expected Interest (%, per year)\n          </label>\n          <input type=\"number\" value={userInput.enteredExpectedInterest} onChange={expectedInterestHandler} id=\"expected-return\" />\n        </p>\n        <p>\n          <label htmlFor=\"duration\">Investment Duration (years)</label>\n          <input type=\"number\" value={userInput.enteredInvestmentDuration} onChange={investmentDurationHandler} id=\"duration\" />\n        </p>\n      </div>\n      <p className=\"actions\">\n        <button type=\"reset\" className=\"buttonAlt\">\n          Reset\n        </button>\n        <button type=\"submit\" className=\"button\">\n          Calculate\n        </button>\n      </p>\n    </form>\n  )\n}\n\nexport default CalculatorForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}